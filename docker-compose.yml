version: '3.4'

services:
  fly:
    image: ${DOCKER_REGISTRY-}fly
    build:
      context: .
      dockerfile: Fly/Dockerfile
    depends_on: 
    - db
    environment:
    - DatabaseIp=db

  flyplusjourneycontentenricher:
    image: ${DOCKER_REGISTRY-}flyplusjourneycontentenricher
    build:
      context: .
      dockerfile: FlyPlusJourneyContentEnricher/Dockerfile
    environment:
        - RabbitIP=host.docker.internal
        - FlyIp=fly 


  flyrejser:
    image: ${DOCKER_REGISTRY-}flyrejser
    build:
      context: .
      dockerfile: FlyRejser/Dockerfile
    depends_on: 
        - db
    environment:
        - DatabaseIp=db
        - RabbitIP=host.docker.internal
        - FlightURI=fly 


  workerfids:
    image: ${DOCKER_REGISTRY-}workerfids
    build:
      context: .
      dockerfile: WorkerFIDS/Dockerfile
    ports:
    - 8010:8010
    environment:
    - ASPNETCORE_URLS=ws://*:8010
    - RedisIP=redis  
    - RabbitIP=host.docker.internal 
    depends_on: 
    - redis

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
        - ACCEPT_EULA=Y
        - MSSQL_SA_PASSWORD=yourStrong(!)Password
    ports:
        -  1433:1433
  
  redis:
    image: redis/redis-stack-server:latest
    ports:
        - 6379:6379

  frontend:
   image: fidsfrontend:dev
   environment:
   - BACKEND_FIDS_IP=workerfids
   ports:
   - 80:80

  # loki:
  #   image: grafana/loki:2.9.2
  #   ports:
  #           - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml

  # promtail:
  #   image: grafana/promtail:2.9.2
  #   volumes:
  #     - /var/log:/var/log
  #   command: -config.file=/etc/promtail/config.yml

  # grafana:
  #   environment:
  #     - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #   entrypoint:
  #     - sh
  #     - -euc
  #     - |
  #       mkdir -p /etc/grafana/provisioning/datasources
  #       cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
  #       apiVersion: 1
  #       datasources:
  #       - name: Loki
  #         type: loki
  #         access: proxy 
  #         orgId: 1
  #         url: http://loki:3100
  #         basicAuth: false
  #         isDefault: true
  #         version: 1
  #         editable: false
  #       EOF
  #       /run.sh
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"


